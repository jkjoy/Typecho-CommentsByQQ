<?php
if (!defined('__TYPECHO_ROOT_DIR__')) exit;

/**
 * ÂçöÂÆ¢ËØÑËÆ∫ÈÄöËøáQQÊú∫Âô®‰∫∫ÈÄöÁü•QQ
 * @package CommentsByQQ
 * @author ËÄÅÂ≠ô
 * @version 1.0.7
 * @link https://www.imsun.org/
 */
class CommentsByQQ_Plugin implements Typecho_Plugin_Interface
{
    /**
     * ÊøÄÊ¥ªÊèí‰ª∂ÊñπÊ≥ï
     */
    public static function activate()
    {
        Typecho_Plugin::factory('Widget_Feedback')->finishComment = array(__CLASS__, 'render');
        Typecho_Plugin::factory('Widget_Comments_Edit')->finishComment = array(__CLASS__, 'render');
        return _t('Êèí‰ª∂Â∑≤ÊøÄÊ¥ª');
    }

    /**
     * Á¶ÅÁî®Êèí‰ª∂ÊñπÊ≥ï
     */
    public static function deactivate()
    {
        return _t('Êèí‰ª∂Â∑≤Á¶ÅÁî®');
    }

    /**
     * Êèí‰ª∂ÈÖçÁΩÆÈù¢Êùø
     */
    public static function config(Typecho_Widget_Helper_Form $form)
    {
        $default_url = defined('__TYPECHO_COMMENT_BY_QQ_API_URL__') 
            ? __TYPECHO_COMMENT_BY_QQ_API_URL__ 
            : 'https://bot.asbid.cn';

        $qq = new Typecho_Widget_Helper_Form_Element_Text(
            'qq',
            NULL,
            '',
            _t('Êé•Êî∂ÈÄöÁü•ÁöÑQQÂè∑'),
            _t('ÈúÄË¶ÅÊé•Êî∂ÈÄöÁü•ÁöÑQQÂè∑Á†Å')
        );
        $form->addInput($qq->addRule('required', _t('ÂøÖÈ°ªÂ°´ÂÜôQQÂè∑')));

        $api_url = new Typecho_Widget_Helper_Form_Element_Text(
            'qqboturl',
            NULL,
            $default_url,
            _t('Êú∫Âô®‰∫∫APIÂú∞ÂùÄ'),
            _t('ÈªòËÆ§Ôºö') . $default_url
        );
        $form->addInput($api_url->addRule('required', _t('ÂøÖÈ°ªÂ°´ÂÜôAPIÂú∞ÂùÄ')));
    }

    /**
     * ‰∏™‰∫∫ÈÖçÁΩÆÈù¢Êùø
     */
    public static function personalConfig(Typecho_Widget_Helper_Form $form)
    {
        // Êó†ÈúÄ‰∏™‰∫∫ÈÖçÁΩÆ
    }

    /**
     * ÂèëÈÄÅQQÈÄöÁü•Ôºà‰øÆÂ§ç‰π±Á†ÅÁöÑÊ†∏ÂøÉÊñπÊ≥ïÔºâ
     */
    public static function render($comment)
    {
        $options = Helper::options();
        
        // 1. Ê£ÄÊü•ËØÑËÆ∫Áä∂ÊÄÅ
        if ($comment->status != "approved") {
            error_log('[CommentsByQQ] ËØÑËÆ∫Êú™ÈÄöËøáÂÆ°Ê†∏: ' . $comment->status);
            return;
        }

        // 2. Ëé∑ÂèñÈÖçÁΩÆ
        $api_url = $options->plugin('CommentsByQQ')->qqboturl;
        $qq_num = $options->plugin('CommentsByQQ')->qq;

        if (empty($api_url) || empty($qq_num)) {
            error_log('[CommentsByQQ] ÈÖçÁΩÆ‰∏çÂÆåÊï¥: API_URL='.$api_url.' QQ='.$qq_num);
            return;
        }

        // 3. Ë∑≥ËøáÂçö‰∏ªËØÑËÆ∫
        if ($comment->authorId === $comment->ownerId) {
            error_log('[CommentsByQQ] Ë∑≥ËøáÂçö‰∏ªËØÑËÆ∫');
            return;
        }

        // 4. ÊûÑÂª∫Ê∂àÊÅØÔºà‰∏çÂÜç‰ΩøÁî®urlencodeÔºâ
        $message = sprintf(
            "„ÄêÊñ∞ËØÑËÆ∫ÈÄöÁü•„Äë\n"
            . "üìù ËØÑËÆ∫ËÄÖÔºö%s\n"
            . "üìñ ÊñáÁ´†Ê†áÈ¢òÔºö„Ää%s„Äã\n"
            . "üí¨ ËØÑËÆ∫ÂÜÖÂÆπÔºö%s\n"
            . "üîó ÊñáÁ´†ÈìæÊé•Ôºö%s",
            $comment->author,
            $comment->title,
            strip_tags($comment->text),
            $comment->permalink
        );

        // 5. ÂáÜÂ§áËØ∑Ê±ÇÊï∞ÊçÆÔºà‰ΩøÁî®JSONÊ†ºÂºèÔºâ
        $payload = [
            'user_id' => (int)$qq_num,
            'message' => $message
        ];

        // 6. ÂèëÈÄÅËØ∑Ê±ÇÔºà‰ΩøÁî®POST+JSONÔºâ
        $ch = curl_init();
        curl_setopt_array($ch, [
            CURLOPT_URL => rtrim($api_url, '/') . '/send_msg',
            CURLOPT_POST => true,
            CURLOPT_POSTFIELDS => json_encode($payload, JSON_UNESCAPED_UNICODE),
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_TIMEOUT => 10,
            CURLOPT_HTTPHEADER => [
                'Content-Type: application/json; charset=UTF-8',
                'Accept: application/json'
            ],
            CURLOPT_SSL_VERIFYPEER => false
        ]);

        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

        if (curl_errno($ch)) {
            error_log('[CommentsByQQ] CURLÈîôËØØ: ' . curl_error($ch));
        } else {
            error_log(sprintf(
                '[CommentsByQQ] ÂìçÂ∫î [HTTP %d]: %s',
                $httpCode,
                substr($response, 0, 200)
            ));
        }
        curl_close($ch);
    }
}